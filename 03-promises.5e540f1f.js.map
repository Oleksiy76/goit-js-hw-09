{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAaC,SAASC,cAAc,SACxBD,SAASC,cAAc,yBAEzC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EAEFI,EAAQ,CAAEN,WAAUC,UAGpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAiCPL,EAAWa,iBAAiB,UA7BP,SAAAC,GACnBA,EAAMC,iBAEN,IAAIC,EAAQC,OAAOH,EAAMI,OAAOb,MAAMc,OAChCC,EAAOH,OAAOH,EAAMI,OAAOE,KAAKD,OAChCE,EAASJ,OAAOH,EAAMI,OAAOG,OAAOF,OAE1C,GAAIH,GAAS,GAAKI,GAAQ,GAAKC,GAAU,EACvCC,EAAAxB,GAASyB,OAAOC,QAAQ,4CAD1B,CAKA,IAAK,IAAIC,EAAW,EAAGA,GAAYJ,EAAQI,GAAY,EACrDtB,EAAcsB,EAAUT,GACrBU,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MACjBiB,EAAAxB,GAASyB,OAAOK,QACd,sBAAuCC,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAGhDyB,OAAM,SAAAH,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAClBiB,EAAAxB,GAASyB,OAAOQ,QACd,sBAAqCF,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAGjDW,GAASI,EAEXpB,EAAWgC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formSubmit = document.querySelector('.form');\nconst btnSubmit = document.querySelector('button[type=\"submit\"]');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst onSubmitForm = event => {\n  event.preventDefault();\n\n  let delay = Number(event.target.delay.value);\n  const step = Number(event.target.step.value);\n  const amount = Number(event.target.amount.value);\n\n  if (delay <= 0 || step <= 0 || amount <= 0) {\n    Notiflix.Notify.warning('Render not possible, enter value > 0');\n    return;\n  }\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delay += step;\n  }\n  formSubmit.reset();\n};\n\nformSubmit.addEventListener('submit', onSubmitForm);\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$formSubmit","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","delay1","Number","target","value","step","amount","$parcel$interopDefault","Notify","warning","position1","then","param","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.5e540f1f.js.map"}